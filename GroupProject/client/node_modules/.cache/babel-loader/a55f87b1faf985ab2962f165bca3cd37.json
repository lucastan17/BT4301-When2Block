{"ast":null,"code":"const findFocusable = (element, programmatic = false) => {\n  if (!element) {\n    return null;\n  }\n\n  if (programmatic) {\n    return element.querySelectorAll(`*[tabindex=\"-1\"]`);\n  }\n\n  return element.querySelectorAll(`a[href]:not([tabindex=\"-1\"]),\n                                     area[href],\n                                     input:not([disabled]),\n                                     select:not([disabled]),\n                                     textarea:not([disabled]),\n                                     button:not([disabled]),\n                                     iframe,\n                                     object,\n                                     embed,\n                                     *[tabindex]:not([tabindex=\"-1\"]),\n                                     *[contenteditable]`);\n};\n\nlet onKeyDown;\n\nconst bind = (el, {\n  value = true\n}) => {\n  if (value) {\n    let focusable = findFocusable(el);\n    let focusableProg = findFocusable(el, true);\n\n    if (focusable && focusable.length > 0) {\n      onKeyDown = event => {\n        // Need to get focusable each time since it can change between key events\n        // ex. changing month in a datepicker\n        focusable = findFocusable(el);\n        focusableProg = findFocusable(el, true);\n        const firstFocusable = focusable[0];\n        const lastFocusable = focusable[focusable.length - 1];\n\n        if (event.target === firstFocusable && event.shiftKey && event.key === 'Tab') {\n          event.preventDefault();\n          lastFocusable.focus();\n        } else if ((event.target === lastFocusable || Array.from(focusableProg).indexOf(event.target) >= 0) && !event.shiftKey && event.key === 'Tab') {\n          event.preventDefault();\n          firstFocusable.focus();\n        }\n      };\n\n      el.addEventListener('keydown', onKeyDown);\n    }\n  }\n};\n\nconst unbind = el => {\n  el.removeEventListener('keydown', onKeyDown);\n};\n\nconst directive = {\n  beforeMount: bind,\n  beforeUnmount: unbind\n};\nexport { directive as d };","map":{"version":3,"names":["findFocusable","element","programmatic","querySelectorAll","onKeyDown","bind","el","value","focusable","focusableProg","length","event","firstFocusable","lastFocusable","target","shiftKey","key","preventDefault","focus","Array","from","indexOf","addEventListener","unbind","removeEventListener","directive","beforeMount","beforeUnmount","d"],"sources":["C:/Users/JeeJoo/Documents/GitHub/BT4301-When2Block/GroupProject/client/node_modules/@oruga-ui/oruga-next/dist/esm/trapFocus-dc03669f.mjs"],"sourcesContent":["const findFocusable = (element, programmatic = false) => {\r\n    if (!element) {\r\n        return null;\r\n    }\r\n    if (programmatic) {\r\n        return element.querySelectorAll(`*[tabindex=\"-1\"]`);\r\n    }\r\n    return element.querySelectorAll(`a[href]:not([tabindex=\"-1\"]),\n                                     area[href],\n                                     input:not([disabled]),\n                                     select:not([disabled]),\n                                     textarea:not([disabled]),\n                                     button:not([disabled]),\n                                     iframe,\n                                     object,\n                                     embed,\n                                     *[tabindex]:not([tabindex=\"-1\"]),\n                                     *[contenteditable]`);\r\n};\r\nlet onKeyDown;\r\nconst bind = (el, { value = true }) => {\r\n    if (value) {\r\n        let focusable = findFocusable(el);\r\n        let focusableProg = findFocusable(el, true);\r\n        if (focusable && focusable.length > 0) {\r\n            onKeyDown = (event) => {\r\n                // Need to get focusable each time since it can change between key events\r\n                // ex. changing month in a datepicker\r\n                focusable = findFocusable(el);\r\n                focusableProg = findFocusable(el, true);\r\n                const firstFocusable = focusable[0];\r\n                const lastFocusable = focusable[focusable.length - 1];\r\n                if (event.target === firstFocusable && event.shiftKey && event.key === 'Tab') {\r\n                    event.preventDefault();\r\n                    lastFocusable.focus();\r\n                }\r\n                else if ((event.target === lastFocusable || Array.from(focusableProg).indexOf(event.target) >= 0) && !event.shiftKey && event.key === 'Tab') {\r\n                    event.preventDefault();\r\n                    firstFocusable.focus();\r\n                }\r\n            };\r\n            el.addEventListener('keydown', onKeyDown);\r\n        }\r\n    }\r\n};\r\nconst unbind = (el) => {\r\n    el.removeEventListener('keydown', onKeyDown);\r\n};\r\nconst directive = {\r\n    beforeMount: bind,\r\n    beforeUnmount: unbind,\r\n};\n\nexport { directive as d };\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,OAAD,EAAUC,YAAY,GAAG,KAAzB,KAAmC;EACrD,IAAI,CAACD,OAAL,EAAc;IACV,OAAO,IAAP;EACH;;EACD,IAAIC,YAAJ,EAAkB;IACd,OAAOD,OAAO,CAACE,gBAAR,CAA0B,kBAA1B,CAAP;EACH;;EACD,OAAOF,OAAO,CAACE,gBAAR,CAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAVW,CAAP;AAWH,CAlBD;;AAmBA,IAAIC,SAAJ;;AACA,MAAMC,IAAI,GAAG,CAACC,EAAD,EAAK;EAAEC,KAAK,GAAG;AAAV,CAAL,KAA0B;EACnC,IAAIA,KAAJ,EAAW;IACP,IAAIC,SAAS,GAAGR,aAAa,CAACM,EAAD,CAA7B;IACA,IAAIG,aAAa,GAAGT,aAAa,CAACM,EAAD,EAAK,IAAL,CAAjC;;IACA,IAAIE,SAAS,IAAIA,SAAS,CAACE,MAAV,GAAmB,CAApC,EAAuC;MACnCN,SAAS,GAAIO,KAAD,IAAW;QACnB;QACA;QACAH,SAAS,GAAGR,aAAa,CAACM,EAAD,CAAzB;QACAG,aAAa,GAAGT,aAAa,CAACM,EAAD,EAAK,IAAL,CAA7B;QACA,MAAMM,cAAc,GAAGJ,SAAS,CAAC,CAAD,CAAhC;QACA,MAAMK,aAAa,GAAGL,SAAS,CAACA,SAAS,CAACE,MAAV,GAAmB,CAApB,CAA/B;;QACA,IAAIC,KAAK,CAACG,MAAN,KAAiBF,cAAjB,IAAmCD,KAAK,CAACI,QAAzC,IAAqDJ,KAAK,CAACK,GAAN,KAAc,KAAvE,EAA8E;UAC1EL,KAAK,CAACM,cAAN;UACAJ,aAAa,CAACK,KAAd;QACH,CAHD,MAIK,IAAI,CAACP,KAAK,CAACG,MAAN,KAAiBD,aAAjB,IAAkCM,KAAK,CAACC,IAAN,CAAWX,aAAX,EAA0BY,OAA1B,CAAkCV,KAAK,CAACG,MAAxC,KAAmD,CAAtF,KAA4F,CAACH,KAAK,CAACI,QAAnG,IAA+GJ,KAAK,CAACK,GAAN,KAAc,KAAjI,EAAwI;UACzIL,KAAK,CAACM,cAAN;UACAL,cAAc,CAACM,KAAf;QACH;MACJ,CAfD;;MAgBAZ,EAAE,CAACgB,gBAAH,CAAoB,SAApB,EAA+BlB,SAA/B;IACH;EACJ;AACJ,CAxBD;;AAyBA,MAAMmB,MAAM,GAAIjB,EAAD,IAAQ;EACnBA,EAAE,CAACkB,mBAAH,CAAuB,SAAvB,EAAkCpB,SAAlC;AACH,CAFD;;AAGA,MAAMqB,SAAS,GAAG;EACdC,WAAW,EAAErB,IADC;EAEdsB,aAAa,EAAEJ;AAFD,CAAlB;AAKA,SAASE,SAAS,IAAIG,CAAtB"},"metadata":{},"sourceType":"module"}