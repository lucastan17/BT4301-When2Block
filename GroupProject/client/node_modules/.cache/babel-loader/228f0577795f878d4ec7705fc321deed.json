{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport { defineComponent, resolveComponent, openBlock, createBlock, createVNode, mergeProps, withKeys, withModifiers, Transition, withCtx, withDirectives, renderSlot, createCommentVNode, Fragment, renderList, toDisplayString, vShow } from 'vue';\nimport { getValueByPath, toCssDimension, debounce, createAbsoluteElement, removeElement } from './helpers.mjs';\nimport { getOptions } from './config.mjs';\nimport { B as BaseComponentMixin } from './plugins-8a0db0e9.mjs';\nimport { F as FormElementMixin } from './FormElementMixin-386fdfd0.mjs';\nimport { s as script$1 } from './Input-fbc105c2.mjs';\n/**\r\n * Extended input that provide suggestions while the user types\r\n * @displayName Autocomplete\r\n * @style _autocomplete.scss\r\n */\n\nvar script = defineComponent({\n  name: 'OAutocomplete',\n  configField: 'autocomplete',\n  components: {\n    [script$1.name]: script$1\n  },\n  mixins: [BaseComponentMixin, FormElementMixin],\n  inheritAttrs: false,\n  emits: ['update:modelValue', 'select', 'infinite-scroll', 'typing', 'focus', 'blur', 'icon-click', 'icon-right-click'],\n  props: {\n    /** @model */\n    modelValue: [Number, String],\n\n    /** Options / suggestions */\n    data: {\n      type: Array,\n      default: () => []\n    },\n\n    /** Native options to use in HTML5 validation */\n    autocomplete: String,\n\n    /**\r\n     * Vertical size of input, optional\r\n     * @values small, medium, large\r\n     */\n    size: String,\n\n    /** Property of the object (if data is array of objects) to use as display text, and to keep track of selected option */\n    field: {\n      type: String,\n      default: 'value'\n    },\n\n    /** The first option will always be pre-selected (easier to just hit enter or tab) */\n    keepFirst: Boolean,\n\n    /** Clear input text on select */\n    clearOnSelect: Boolean,\n\n    /** Open dropdown list on focus */\n    openOnFocus: Boolean,\n\n    /** Function to format an option to a string for display in the input as alternative to field prop) */\n    customFormatter: Function,\n\n    /** Makes the component check if list reached scroll end and emit infinite-scroll event. */\n    checkInfiniteScroll: Boolean,\n\n    /** Keep open dropdown list after select */\n    keepOpen: Boolean,\n\n    /** Add a button/icon to clear the inputed text */\n    clearable: Boolean,\n\n    /** Max height of dropdown content */\n    maxHeight: [String, Number],\n\n    /**\r\n     * Position of dropdown\r\n     * @values auto, top, bottom\r\n     */\n    menuPosition: {\n      type: String,\n      default: 'auto'\n    },\n\n    /** Transition name to apply on dropdown list */\n    animation: {\n      type: String,\n      default: () => {\n        return getValueByPath(getOptions(), 'autocomplete.animation', 'fade');\n      }\n    },\n\n    /** Property of the object (if <code>data</code> is array of objects) to use as display text of group */\n    groupField: String,\n\n    /** Property of the object (if <code>data</code> is array of objects) to use as key to get items array of each group, optional */\n    groupOptions: String,\n\n    /** Number of milliseconds to delay before to emit typing event */\n    debounceTyping: Number,\n\n    /** Icon name to be added on the right side */\n    iconRight: String,\n\n    /** Clickable icon right if exists */\n    iconRightClickable: Boolean,\n\n    /** Append autocomplete content to body */\n    appendToBody: Boolean,\n\n    /** Array of keys (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) which will add a tag when typing (default tab and enter) */\n    confirmKeys: {\n      type: Array,\n      default: () => ['Tab', 'Enter']\n    },\n\n    /** Input type */\n    type: {\n      type: String,\n      default: 'text'\n    },\n\n    /**\r\n     * Menu tag name\r\n     */\n    menuTag: {\n      type: String,\n      default: () => {\n        return getValueByPath(getOptions(), 'autocomplete.menuTag', 'div');\n      }\n    },\n\n    /**\r\n     * Menu item tag name\r\n     */\n    itemTag: {\n      type: String,\n      default: () => {\n        return getValueByPath(getOptions(), 'autocomplete.itemTag', 'div');\n      }\n    },\n\n    /** Trigger the select event for the first pre-selected option when clicking outside and <code>keep-first</code> is enabled */\n    selectOnClickOutside: Boolean,\n\n    /** Allows the header in the autocomplete to be selectable */\n    selectableHeader: Boolean,\n\n    /** Allows the footer in the autocomplete to be selectable */\n    selectableFooter: Boolean,\n    rootClass: [String, Function, Array],\n    menuClass: [String, Function, Array],\n    expandedClass: [String, Function, Array],\n    menuPositionClass: [String, Function, Array],\n    itemClass: [String, Function, Array],\n    itemHoverClass: [String, Function, Array],\n    itemGroupTitleClass: [String, Function, Array],\n    itemEmptyClass: [String, Function, Array],\n    itemHeaderClass: [String, Function, Array],\n    itemFooterClass: [String, Function, Array],\n    inputClasses: {\n      type: Object,\n      default: () => {\n        return getValueByPath(getOptions(), 'autocomplete.inputClasses', {});\n      }\n    }\n  },\n\n  data() {\n    return {\n      selected: null,\n      hovered: null,\n      headerHovered: null,\n      footerHovered: null,\n      isActive: false,\n      newValue: this.modelValue,\n      ariaAutocomplete: this.keepFirst ? 'both' : 'list',\n      newAutocomplete: this.autocomplete || 'off',\n      isListInViewportVertically: true,\n      hasFocus: false,\n      itemRefs: [],\n      width: undefined,\n      bodyEl: undefined\n    };\n  },\n\n  computed: {\n    rootClasses() {\n      return [this.computedClass('rootClass', 'o-acp'), {\n        [this.computedClass('expandedClass', 'o-acp--expanded')]: this.expanded\n      }];\n    },\n\n    menuClasses() {\n      return [this.computedClass('menuClass', 'o-acp__menu'), {\n        [this.computedClass('menuPositionClass', 'o-acp__menu--', this.newDropdownPosition)]: !this.appendToBody\n      }];\n    },\n\n    itemClasses() {\n      return [this.computedClass('itemClass', 'o-acp__item')];\n    },\n\n    itemEmptyClasses() {\n      return [...this.itemClasses, this.computedClass('itemEmptyClass', 'o-acp__item--empty')];\n    },\n\n    itemGroupClasses() {\n      return [...this.itemClasses, this.computedClass('itemGroupTitleClass', 'o-acp__item-group-title')];\n    },\n\n    itemHeaderClasses() {\n      return [...this.itemClasses, this.computedClass('itemHeaderClass', 'o-acp__item-header'), {\n        [this.computedClass('itemHoverClass', 'o-acp__item--hover')]: this.headerHovered\n      }];\n    },\n\n    itemFooterClasses() {\n      return [...this.itemClasses, this.computedClass('itemFooterClass', 'o-acp__item-footer'), {\n        [this.computedClass('itemHoverClass', 'o-acp__item--hover')]: this.footerHovered\n      }];\n    },\n\n    inputBind() {\n      return { ...this.$attrs,\n        ...this.inputClasses\n      };\n    },\n\n    computedData() {\n      if (this.groupField) {\n        if (this.groupOptions) {\n          const newData = [];\n          this.data.forEach(option => {\n            const group = getValueByPath(option, this.groupField);\n            const items = getValueByPath(option, this.groupOptions);\n            newData.push({\n              group,\n              items\n            });\n          });\n          return newData;\n        } else {\n          const tmp = {};\n          this.data.forEach(option => {\n            const group = getValueByPath(option, this.groupField);\n            if (!tmp[group]) tmp[group] = [];\n            tmp[group].push(option);\n          });\n          const newData = [];\n          Object.keys(this.data).forEach(group => {\n            newData.push({\n              group,\n              items: this.data[group]\n            });\n          });\n          return newData;\n        }\n      }\n\n      return [{\n        items: this.data\n      }];\n    },\n\n    isEmpty() {\n      if (!this.computedData) return true;\n      return !this.computedData.some(element => element.items && element.items.length);\n    },\n\n    /**\r\n     * White-listed items to not close when clicked.\r\n     * Add input, dropdown and all children.\r\n     */\n    whiteList() {\n      const whiteList = [];\n      whiteList.push(this.$refs.input.$el.querySelector('input'));\n      whiteList.push(this.$refs.dropdown); // Add all children from dropdown\n\n      if (this.$refs.dropdown !== undefined) {\n        const children = this.$refs.dropdown.querySelectorAll('*');\n\n        for (const child of children) {\n          whiteList.push(child);\n        }\n      }\n\n      return whiteList;\n    },\n\n    newDropdownPosition() {\n      if (this.menuPosition === 'top' || this.menuPosition === 'auto' && !this.isListInViewportVertically) {\n        return 'top';\n      }\n\n      return 'bottom';\n    },\n\n    newIconRight() {\n      if (this.clearable && this.newValue) {\n        return 'close-circle';\n      }\n\n      return this.iconRight;\n    },\n\n    newIconRightClickable() {\n      if (this.clearable) {\n        return true;\n      }\n\n      return this.iconRightClickable;\n    },\n\n    menuStyle() {\n      return {\n        maxHeight: toCssDimension(this.maxHeight)\n      };\n    },\n\n    $elementRef() {\n      return 'input';\n    }\n\n  },\n  watch: {\n    /**\r\n     * When v-model is changed:\r\n     *   1. Update internal value.\r\n     *   2. If it's invalid, validate again.\r\n     */\n    modelValue(value) {\n      this.newValue = value;\n    },\n\n    /**\r\n     * When dropdown is toggled, check the visibility to know when\r\n     * to open upwards.\r\n     */\n    isActive(active) {\n      if (this.menuPosition === 'auto') {\n        if (active) {\n          this.calcDropdownInViewportVertical();\n        } else {\n          // Timeout to wait for the animation to finish before recalculating\n          setTimeout(() => {\n            this.calcDropdownInViewportVertical();\n          }, 100);\n        }\n      }\n    },\n\n    /**\r\n     * When updating input's value\r\n     *   1. Emit changes\r\n     *   2. If value isn't the same as selected, set null\r\n     *   3. Close dropdown if value is clear or else open it\r\n     */\n    newValue(value) {\n      this.$emit('update:modelValue', value); // Check if selected is invalid\n\n      const currentValue = this.getValue(this.selected);\n\n      if (currentValue && currentValue !== value) {\n        this.setSelected(null, false);\n      } // Close dropdown if input is clear or else open it\n\n\n      if (this.hasFocus && (!this.openOnFocus || value)) {\n        this.isActive = !!value;\n      }\n    },\n\n    /**\r\n     * Select first option if \"keep-first\r\n     */\n    data() {\n      // Keep first option always pre-selected\n      if (this.keepFirst) {\n        this.$nextTick(() => {\n          if (this.isActive) {\n            this.selectFirstOption(this.computedData);\n          } else {\n            this.setHovered(null);\n          }\n        });\n      } else {\n        if (this.hovered) {\n          // reset hovered if list doesn't contain it\n          const hoveredValue = this.getValue(this.hovered);\n          const data = this.computedData.map(d => d.items).reduce((a, b) => [...a, ...b], []);\n\n          if (!data.some(d => this.getValue(d) === hoveredValue)) {\n            this.setHovered(null);\n          }\n        }\n      }\n    },\n\n    debounceTyping: {\n      handler(value) {\n        this.debouncedEmitTyping = debounce(this.emitTyping, value);\n      },\n\n      immediate: true\n    }\n  },\n  methods: {\n    itemOptionClasses(option) {\n      return [...this.itemClasses, {\n        [this.computedClass('itemHoverClass', 'o-acp__item--hover')]: option === this.hovered\n      }];\n    },\n\n    /**\r\n     * Set which option is currently hovered.\r\n     */\n    setHovered(option) {\n      if (option === undefined) return;\n      this.hovered = option;\n    },\n\n    /**\r\n     * Set which option is currently selected, update v-model,\r\n     * update input value and close dropdown.\r\n     */\n    setSelected(option, closeDropdown = true, event = undefined) {\n      if (option === undefined) return;\n      this.selected = option;\n      /**\r\n       * @property {Object} selected selected option\r\n       * @property {Event} event native event\r\n       */\n\n      this.$emit('select', this.selected, event);\n\n      if (this.selected !== null) {\n        if (this.clearOnSelect) {\n          const input = this.$refs.input;\n          input.newValue = '';\n          input.$refs.input.value = '';\n        } else {\n          this.newValue = this.getValue(this.selected);\n        }\n\n        this.setHovered(null);\n      }\n\n      closeDropdown && this.$nextTick(() => {\n        this.isActive = false;\n      });\n      this.checkValidity();\n    },\n\n    /**\r\n     * Select first option\r\n     */\n    selectFirstOption(computedData) {\n      this.$nextTick(() => {\n        const nonEmptyElements = computedData.filter(element => element.items && element.items.length);\n\n        if (nonEmptyElements.length) {\n          const option = nonEmptyElements[0].items[0];\n          this.setHovered(option);\n        } else {\n          this.setHovered(null);\n        }\n      });\n    },\n\n    /**\r\n     * Key listener.\r\n     * Select the hovered option.\r\n     */\n    keydown(event) {\n      const {\n        key\n      } = event; // cannot destructure preventDefault (https://stackoverflow.com/a/49616808/2774496)\n      // prevent emit submit event\n\n      if (key === 'Enter') event.preventDefault(); // Close dropdown on Tab & no hovered\n\n      if (key === 'Escape' || key === 'Tab') {\n        this.isActive = false;\n      }\n\n      if (this.confirmKeys.indexOf(key) >= 0) {\n        // If adding by comma, don't add the comma to the input\n        if (key === ',') event.preventDefault(); // Close dropdown on select by Tab\n\n        const closeDropdown = !this.keepOpen || key === 'Tab';\n\n        if (this.hovered === null) {\n          // header and footer uses headerHovered && footerHovered. If header or footer\n          // was selected then fire event otherwise just return so a value isn't selected\n          this.checkIfHeaderOrFooterSelected(event, null, closeDropdown);\n          return;\n        }\n\n        this.setSelected(this.hovered, closeDropdown, event);\n      }\n    },\n\n    selectHeaderOrFoterByClick(event, origin) {\n      this.checkIfHeaderOrFooterSelected(event, {\n        origin: origin\n      });\n    },\n\n    /**\r\n     * Check if header or footer was selected.\r\n     */\n    checkIfHeaderOrFooterSelected(event, triggerClick, closeDropdown = true) {\n      if (this.selectableHeader && (this.headerHovered || triggerClick && triggerClick.origin === 'header')) {\n        this.$emit('select-header', event);\n        this.headerHovered = false;\n        if (triggerClick) this.setHovered(null);\n        if (closeDropdown) this.isActive = false;\n      }\n\n      if (this.selectableFooter && (this.footerHovered || triggerClick && triggerClick.origin === 'header')) {\n        this.$emit('select-footer', event);\n        this.footerHovered = false;\n        if (triggerClick) this.setHovered(null);\n        if (closeDropdown) this.isActive = false;\n      }\n    },\n\n    /**\r\n     * Close dropdown if clicked outside.\r\n     */\n    clickedOutside(event) {\n      if (!this.hasFocus && this.whiteList.indexOf(event.target) < 0) {\n        if (this.keepFirst && this.hovered && this.selectOnClickOutside) {\n          this.setSelected(this.hovered, true);\n        } else {\n          this.isActive = false;\n        }\n      }\n    },\n\n    /**\r\n     * Return display text for the input.\r\n     * If object, get value from path, or else just the value.\r\n     */\n    getValue(option) {\n      if (option === null) return;\n\n      if (typeof this.customFormatter !== 'undefined') {\n        return this.customFormatter(option);\n      }\n\n      return typeof option === 'object' ? getValueByPath(option, this.field) : option;\n    },\n\n    /**\r\n     * Check if the scroll list inside the dropdown\r\n     * reached it's end.\r\n     */\n    checkIfReachedTheEndOfScroll() {\n      const list = this.$refs.dropdown;\n\n      if (list.clientHeight !== list.scrollHeight && list.scrollTop + list.clientHeight >= list.scrollHeight) {\n        this.$emit('infinite-scroll');\n      }\n    },\n\n    /**\r\n     * Calculate if the dropdown is vertically visible when activated,\r\n     * otherwise it is openened upwards.\r\n     */\n    calcDropdownInViewportVertical() {\n      this.$nextTick(() => {\n        /**\r\n        * this.$refs.dropdown may be undefined\r\n        * when Autocomplete is conditional rendered\r\n        */\n        if (!this.$refs.dropdown) return;\n        const rect = this.$refs.dropdown.getBoundingClientRect();\n        this.isListInViewportVertically = rect.top >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight);\n\n        if (this.appendToBody) {\n          this.updateAppendToBody();\n        }\n      });\n    },\n\n    /**\r\n     * Arrows keys listener.\r\n     * If dropdown is active, set hovered option, or else just open.\r\n     */\n    keyArrows(direction) {\n      const sum = direction === 'down' ? 1 : -1;\n\n      if (this.isActive) {\n        const data = this.computedData.map(d => d.items).reduce((a, b) => [...a, ...b], []);\n\n        if (this.$slots.header && this.selectableHeader) {\n          data.unshift(undefined);\n        }\n\n        if (this.$slots.footer && this.selectableFooter) {\n          data.push(undefined);\n        }\n\n        let index;\n\n        if (this.headerHovered) {\n          index = 0 + sum;\n        } else if (this.footerHovered) {\n          index = data.length - 1 + sum;\n        } else {\n          index = data.indexOf(this.hovered) + sum;\n        }\n\n        index = index > data.length - 1 ? data.length - 1 : index;\n        index = index < 0 ? 0 : index;\n        this.footerHovered = false;\n        this.headerHovered = false;\n        this.setHovered(data[index] !== undefined ? data[index] : null);\n\n        if (this.$slots.footer && this.selectableFooter && index === data.length - 1) {\n          this.footerHovered = true;\n        }\n\n        if (this.$slots.header && this.selectableHeader && index === 0) {\n          this.headerHovered = true;\n        }\n\n        const list = this.$refs.dropdown;\n        let items = this.itemRefs || [];\n\n        if (this.$slots.header && this.selectableHeader) {\n          items = [this.$refs.header, ...items];\n        }\n\n        if (this.$slots.footer && this.selectableFooter) {\n          items = [...items, this.$refs.footer];\n        }\n\n        const element = items[index];\n        if (!element) return;\n        const visMin = list.scrollTop;\n        const visMax = list.scrollTop + list.clientHeight - element.clientHeight;\n\n        if (element.offsetTop < visMin) {\n          list.scrollTop = element.offsetTop;\n        } else if (element.offsetTop >= visMax) {\n          list.scrollTop = element.offsetTop - list.clientHeight + element.clientHeight;\n        }\n      } else {\n        this.isActive = true;\n      }\n    },\n\n    /**\r\n     * Focus listener.\r\n     * If value is the same as selected, select all text.\r\n     */\n    focused(event) {\n      if (this.getValue(this.selected) === this.newValue) {\n        this.$el.querySelector('input').select();\n      }\n\n      if (this.openOnFocus) {\n        this.isActive = true;\n\n        if (this.keepFirst) {\n          // If open on focus, update the hovered\n          this.selectFirstOption(this.computedData);\n        }\n      }\n\n      this.hasFocus = true;\n      this.$emit('focus', event);\n    },\n\n    /**\r\n    * Blur listener.\r\n    */\n    onBlur(event) {\n      this.hasFocus = false;\n      this.$emit('blur', event);\n    },\n\n    onInput() {\n      const currentValue = this.getValue(this.selected);\n      if (currentValue && currentValue === this.newValue) return;\n\n      if (this.debounceTyping) {\n        this.debouncedEmitTyping();\n      } else {\n        this.emitTyping();\n      }\n    },\n\n    emitTyping() {\n      this.$emit('typing', this.newValue);\n      this.checkValidity();\n    },\n\n    rightIconClick(event) {\n      if (this.clearable) {\n        this.newValue = '';\n        this.setSelected(null, false);\n\n        if (this.openOnFocus) {\n          this.$refs.input.$el.focus();\n        }\n      } else {\n        this.$emit('icon-right-click', event);\n      }\n    },\n\n    checkValidity() {\n      if (this.useHtml5Validation) {\n        this.$nextTick(() => {\n          this.checkHtml5Validity();\n        });\n      }\n    },\n\n    setItemRef(el) {\n      if (el) {\n        this.itemRefs.push(el);\n      }\n    },\n\n    updateAppendToBody() {\n      const dropdownMenu = this.$refs.dropdown;\n      const trigger = this.$refs.input.$el;\n\n      if (dropdownMenu && trigger) {\n        // update wrapper dropdown\n        const root = this.$data.bodyEl;\n        root.classList.forEach(item => root.classList.remove(...item.split(' ')));\n        this.rootClasses.forEach(item => {\n          if (item) {\n            if (typeof item === 'object') {\n              Object.keys(item).filter(key => key && item[key]).forEach(key => root.classList.add(key));\n            } else {\n              root.classList.add(...item.split(' '));\n            }\n          }\n        });\n        const rect = trigger.getBoundingClientRect();\n        let top = rect.top + window.scrollY;\n        const left = rect.left + window.scrollX;\n\n        if (this.newDropdownPosition !== 'top') {\n          top += trigger.clientHeight;\n        } else {\n          top -= dropdownMenu.clientHeight;\n        }\n\n        dropdownMenu.style.position = 'absolute';\n        dropdownMenu.style.top = `${top}px`;\n        dropdownMenu.style.left = `${left}px`;\n        dropdownMenu.style.width = `${trigger.clientWidth}px`;\n        dropdownMenu.style.maxWidth = `${trigger.clientWidth}px`;\n        dropdownMenu.style.zIndex = '9999';\n      }\n    }\n\n  },\n\n  created() {\n    if (typeof window !== 'undefined') {\n      document.addEventListener('click', this.clickedOutside);\n      if (this.menuPosition === 'auto') window.addEventListener('resize', this.calcDropdownInViewportVertical);\n    }\n  },\n\n  mounted() {\n    const list = this.$refs.dropdown;\n\n    if (this.checkInfiniteScroll && list) {\n      list.addEventListener('scroll', this.checkIfReachedTheEndOfScroll);\n    }\n\n    if (this.appendToBody) {\n      this.$data.bodyEl = createAbsoluteElement(list);\n      this.updateAppendToBody();\n    }\n  },\n\n  beforeUpdate() {\n    this.width = this.$refs.input ? this.$refs.input.$el.clientWidth : undefined;\n    this.itemRefs = [];\n  },\n\n  beforeUnmount() {\n    if (typeof window !== 'undefined') {\n      document.removeEventListener('click', this.clickedOutside);\n      if (this.menuPosition === 'auto') window.removeEventListener('resize', this.calcDropdownInViewportVertical);\n    }\n\n    if (this.checkInfiniteScroll && this.$refs.dropdown) {\n      const list = this.$refs.dropdown;\n      list.removeEventListener('scroll', this.checkIfReachedTheEndOfScroll);\n    }\n\n    if (this.appendToBody) {\n      removeElement(this.$data.bodyEl);\n    }\n  }\n\n});\nconst _hoisted_1 = {\n  key: 1\n};\nconst _hoisted_2 = {\n  key: 1\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_o_input = resolveComponent(\"o-input\");\n\n  return openBlock(), createBlock(\"div\", {\n    class: _ctx.rootClasses\n  }, [createVNode(_component_o_input, mergeProps(_ctx.inputBind, {\n    modelValue: _ctx.newValue,\n    \"onUpdate:modelValue\": [_cache[1] || (_cache[1] = $event => _ctx.newValue = $event), _ctx.onInput],\n    ref: \"input\",\n    type: _ctx.type,\n    size: _ctx.size,\n    rounded: _ctx.rounded,\n    icon: _ctx.icon,\n    \"icon-right\": _ctx.newIconRight,\n    \"icon-right-clickable\": _ctx.newIconRightClickable,\n    \"icon-pack\": _ctx.iconPack,\n    maxlength: _ctx.maxlength,\n    autocomplete: _ctx.newAutocomplete,\n    \"use-html5-validation\": false,\n    \"aria-autocomplete\": _ctx.ariaAutocomplete,\n    expanded: _ctx.expanded,\n    onFocus: _ctx.focused,\n    onBlur: _ctx.onBlur,\n    onKeydown: [_ctx.keydown, _cache[2] || (_cache[2] = withKeys(withModifiers($event => _ctx.keyArrows('up'), [\"prevent\"]), [\"up\"])), _cache[3] || (_cache[3] = withKeys(withModifiers($event => _ctx.keyArrows('down'), [\"prevent\"]), [\"down\"]))],\n    \"onIcon-right-click\": _ctx.rightIconClick,\n    \"onIcon-click\": _cache[4] || (_cache[4] = event => _ctx.$emit('icon-click', event))\n  }), null, 16\n  /* FULL_PROPS */\n  , [\"modelValue\", \"type\", \"size\", \"rounded\", \"icon\", \"icon-right\", \"icon-right-clickable\", \"icon-pack\", \"maxlength\", \"autocomplete\", \"aria-autocomplete\", \"expanded\", \"onUpdate:modelValue\", \"onFocus\", \"onBlur\", \"onKeydown\", \"onIcon-right-click\"]), createVNode(Transition, {\n    name: _ctx.animation\n  }, {\n    default: withCtx(() => [withDirectives(createVNode(\"div\", {\n      class: _ctx.menuClasses,\n      is: _ctx.menuTag,\n      style: _ctx.menuStyle,\n      ref: \"dropdown\"\n    }, [_ctx.$slots.header ? (openBlock(), createBlock(\"div\", {\n      key: 0,\n      is: _ctx.itemTag,\n      ref: \"header\",\n      role: \"button\",\n      tabindex: 0,\n      onClick: _cache[5] || (_cache[5] = $event => _ctx.selectHeaderOrFoterByClick($event, 'header')),\n      class: _ctx.itemHeaderClasses\n    }, [renderSlot(_ctx.$slots, \"header\")], 10\n    /* CLASS, PROPS */\n    , [\"is\"])) : createCommentVNode(\"v-if\", true), (openBlock(true), createBlock(Fragment, null, renderList(_ctx.computedData, (element, groupindex) => {\n      return openBlock(), createBlock(Fragment, null, [element.group ? (openBlock(), createBlock(\"div\", {\n        is: _ctx.itemTag,\n        key: groupindex + 'group',\n        class: _ctx.itemGroupClasses\n      }, [_ctx.$slots.group ? renderSlot(_ctx.$slots, \"group\", {\n        key: 0,\n        group: element.group,\n        index: groupindex\n      }) : (openBlock(), createBlock(\"span\", _hoisted_1, toDisplayString(element.group), 1\n      /* TEXT */\n      ))], 10\n      /* CLASS, PROPS */\n      , [\"is\"])) : createCommentVNode(\"v-if\", true), (openBlock(true), createBlock(Fragment, null, renderList(element.items, (option, index) => {\n        return openBlock(), createBlock(\"div\", {\n          key: groupindex + ':' + index,\n          is: _ctx.itemTag,\n          class: _ctx.itemOptionClasses(option),\n          onClick: withModifiers($event => _ctx.setSelected(option, !_ctx.keepOpen, $event), [\"stop\"]),\n          ref: _ctx.setItemRef\n        }, [_ctx.$slots.default ? renderSlot(_ctx.$slots, \"default\", {\n          key: 0,\n          option: option,\n          index: index\n        }) : (openBlock(), createBlock(\"span\", _hoisted_2, toDisplayString(_ctx.getValue(option)), 1\n        /* TEXT */\n        ))], 10\n        /* CLASS, PROPS */\n        , [\"is\", \"onClick\"]);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))], 64\n      /* STABLE_FRAGMENT */\n      );\n    }), 256\n    /* UNKEYED_FRAGMENT */\n    )), _ctx.isEmpty && _ctx.$slots.empty ? (openBlock(), createBlock(\"div\", {\n      key: 1,\n      is: _ctx.itemTag,\n      class: _ctx.itemEmptyClasses\n    }, [renderSlot(_ctx.$slots, \"empty\")], 10\n    /* CLASS, PROPS */\n    , [\"is\"])) : createCommentVNode(\"v-if\", true), _ctx.$slots.footer ? (openBlock(), createBlock(\"div\", {\n      key: 2,\n      is: _ctx.itemTag,\n      ref: \"footer\",\n      role: \"button\",\n      tabindex: 0,\n      onClick: _cache[6] || (_cache[6] = $event => _ctx.selectHeaderOrFoterByClick($event, 'footer')),\n      class: _ctx.itemFooterClasses\n    }, [renderSlot(_ctx.$slots, \"footer\")], 10\n    /* CLASS, PROPS */\n    , [\"is\"])) : createCommentVNode(\"v-if\", true)], 14\n    /* CLASS, STYLE, PROPS */\n    , [\"is\"]), [[vShow, _ctx.isActive && (!_ctx.isEmpty || _ctx.$slots.empty || _ctx.$slots.header || _ctx.$slots.footer)]])]),\n    _: 1\n  }, 8\n  /* PROPS */\n  , [\"name\"])], 2\n  /* CLASS */\n  );\n}\n\nscript.render = render;\nscript.__file = \"src/components/autocomplete/Autocomplete.vue\";\nexport { script as s };","map":{"version":3,"names":["defineComponent","resolveComponent","openBlock","createBlock","createVNode","mergeProps","withKeys","withModifiers","Transition","withCtx","withDirectives","renderSlot","createCommentVNode","Fragment","renderList","toDisplayString","vShow","getValueByPath","toCssDimension","debounce","createAbsoluteElement","removeElement","getOptions","B","BaseComponentMixin","F","FormElementMixin","s","script$1","script","name","configField","components","mixins","inheritAttrs","emits","props","modelValue","Number","String","data","type","Array","default","autocomplete","size","field","keepFirst","Boolean","clearOnSelect","openOnFocus","customFormatter","Function","checkInfiniteScroll","keepOpen","clearable","maxHeight","menuPosition","animation","groupField","groupOptions","debounceTyping","iconRight","iconRightClickable","appendToBody","confirmKeys","menuTag","itemTag","selectOnClickOutside","selectableHeader","selectableFooter","rootClass","menuClass","expandedClass","menuPositionClass","itemClass","itemHoverClass","itemGroupTitleClass","itemEmptyClass","itemHeaderClass","itemFooterClass","inputClasses","Object","selected","hovered","headerHovered","footerHovered","isActive","newValue","ariaAutocomplete","newAutocomplete","isListInViewportVertically","hasFocus","itemRefs","width","undefined","bodyEl","computed","rootClasses","computedClass","expanded","menuClasses","newDropdownPosition","itemClasses","itemEmptyClasses","itemGroupClasses","itemHeaderClasses","itemFooterClasses","inputBind","$attrs","computedData","newData","forEach","option","group","items","push","tmp","keys","isEmpty","some","element","length","whiteList","$refs","input","$el","querySelector","dropdown","children","querySelectorAll","child","newIconRight","newIconRightClickable","menuStyle","$elementRef","watch","value","active","calcDropdownInViewportVertical","setTimeout","$emit","currentValue","getValue","setSelected","$nextTick","selectFirstOption","setHovered","hoveredValue","map","d","reduce","a","b","handler","debouncedEmitTyping","emitTyping","immediate","methods","itemOptionClasses","closeDropdown","event","checkValidity","nonEmptyElements","filter","keydown","key","preventDefault","indexOf","checkIfHeaderOrFooterSelected","selectHeaderOrFoterByClick","origin","triggerClick","clickedOutside","target","checkIfReachedTheEndOfScroll","list","clientHeight","scrollHeight","scrollTop","rect","getBoundingClientRect","top","bottom","window","innerHeight","document","documentElement","updateAppendToBody","keyArrows","direction","sum","$slots","header","unshift","footer","index","visMin","visMax","offsetTop","focused","select","onBlur","onInput","rightIconClick","focus","useHtml5Validation","checkHtml5Validity","setItemRef","el","dropdownMenu","trigger","root","$data","classList","item","remove","split","add","scrollY","left","scrollX","style","position","clientWidth","maxWidth","zIndex","created","addEventListener","mounted","beforeUpdate","beforeUnmount","removeEventListener","_hoisted_1","_hoisted_2","render","_ctx","_cache","$props","$setup","$options","_component_o_input","class","$event","ref","rounded","icon","iconPack","maxlength","onFocus","onKeydown","is","role","tabindex","onClick","groupindex","empty","_","__file"],"sources":["C:/Users/JeeJoo/Documents/GitHub/BT4301-When2Block/GroupProject/client/node_modules/@oruga-ui/oruga-next/dist/esm/Autocomplete-98ab756a.mjs"],"sourcesContent":["import { defineComponent, resolveComponent, openBlock, createBlock, createVNode, mergeProps, withKeys, withModifiers, Transition, withCtx, withDirectives, renderSlot, createCommentVNode, Fragment, renderList, toDisplayString, vShow } from 'vue';\nimport { getValueByPath, toCssDimension, debounce, createAbsoluteElement, removeElement } from './helpers.mjs';\nimport { getOptions } from './config.mjs';\nimport { B as BaseComponentMixin } from './plugins-8a0db0e9.mjs';\nimport { F as FormElementMixin } from './FormElementMixin-386fdfd0.mjs';\nimport { s as script$1 } from './Input-fbc105c2.mjs';\n\n/**\r\n * Extended input that provide suggestions while the user types\r\n * @displayName Autocomplete\r\n * @style _autocomplete.scss\r\n */\r\nvar script = defineComponent({\r\n    name: 'OAutocomplete',\r\n    configField: 'autocomplete',\r\n    components: {\r\n        [script$1.name]: script$1\r\n    },\r\n    mixins: [BaseComponentMixin, FormElementMixin],\r\n    inheritAttrs: false,\r\n    emits: ['update:modelValue', 'select', 'infinite-scroll', 'typing', 'focus', 'blur', 'icon-click', 'icon-right-click'],\r\n    props: {\r\n        /** @model */\r\n        modelValue: [Number, String],\r\n        /** Options / suggestions */\r\n        data: {\r\n            type: Array,\r\n            default: () => []\r\n        },\r\n        /** Native options to use in HTML5 validation */\r\n        autocomplete: String,\r\n        /**\r\n         * Vertical size of input, optional\r\n         * @values small, medium, large\r\n         */\r\n        size: String,\r\n        /** Property of the object (if data is array of objects) to use as display text, and to keep track of selected option */\r\n        field: {\r\n            type: String,\r\n            default: 'value'\r\n        },\r\n        /** The first option will always be pre-selected (easier to just hit enter or tab) */\r\n        keepFirst: Boolean,\r\n        /** Clear input text on select */\r\n        clearOnSelect: Boolean,\r\n        /** Open dropdown list on focus */\r\n        openOnFocus: Boolean,\r\n        /** Function to format an option to a string for display in the input as alternative to field prop) */\r\n        customFormatter: Function,\r\n        /** Makes the component check if list reached scroll end and emit infinite-scroll event. */\r\n        checkInfiniteScroll: Boolean,\r\n        /** Keep open dropdown list after select */\r\n        keepOpen: Boolean,\r\n        /** Add a button/icon to clear the inputed text */\r\n        clearable: Boolean,\r\n        /** Max height of dropdown content */\r\n        maxHeight: [String, Number],\r\n        /**\r\n         * Position of dropdown\r\n         * @values auto, top, bottom\r\n         */\r\n        menuPosition: {\r\n            type: String,\r\n            default: 'auto'\r\n        },\r\n        /** Transition name to apply on dropdown list */\r\n        animation: {\r\n            type: String,\r\n            default: () => {\r\n                return getValueByPath(getOptions(), 'autocomplete.animation', 'fade');\r\n            }\r\n        },\r\n        /** Property of the object (if <code>data</code> is array of objects) to use as display text of group */\r\n        groupField: String,\r\n        /** Property of the object (if <code>data</code> is array of objects) to use as key to get items array of each group, optional */\r\n        groupOptions: String,\r\n        /** Number of milliseconds to delay before to emit typing event */\r\n        debounceTyping: Number,\r\n        /** Icon name to be added on the right side */\r\n        iconRight: String,\r\n        /** Clickable icon right if exists */\r\n        iconRightClickable: Boolean,\r\n        /** Append autocomplete content to body */\r\n        appendToBody: Boolean,\r\n        /** Array of keys (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values) which will add a tag when typing (default tab and enter) */\r\n        confirmKeys: {\r\n            type: Array,\r\n            default: () => ['Tab', 'Enter']\r\n        },\r\n        /** Input type */\r\n        type: {\r\n            type: String,\r\n            default: 'text'\r\n        },\r\n        /**\r\n         * Menu tag name\r\n         */\r\n        menuTag: {\r\n            type: String,\r\n            default: () => {\r\n                return getValueByPath(getOptions(), 'autocomplete.menuTag', 'div');\r\n            }\r\n        },\r\n        /**\r\n         * Menu item tag name\r\n         */\r\n        itemTag: {\r\n            type: String,\r\n            default: () => {\r\n                return getValueByPath(getOptions(), 'autocomplete.itemTag', 'div');\r\n            }\r\n        },\r\n        /** Trigger the select event for the first pre-selected option when clicking outside and <code>keep-first</code> is enabled */\r\n        selectOnClickOutside: Boolean,\r\n        /** Allows the header in the autocomplete to be selectable */\r\n        selectableHeader: Boolean,\r\n        /** Allows the footer in the autocomplete to be selectable */\r\n        selectableFooter: Boolean,\r\n        rootClass: [String, Function, Array],\r\n        menuClass: [String, Function, Array],\r\n        expandedClass: [String, Function, Array],\r\n        menuPositionClass: [String, Function, Array],\r\n        itemClass: [String, Function, Array],\r\n        itemHoverClass: [String, Function, Array],\r\n        itemGroupTitleClass: [String, Function, Array],\r\n        itemEmptyClass: [String, Function, Array],\r\n        itemHeaderClass: [String, Function, Array],\r\n        itemFooterClass: [String, Function, Array],\r\n        inputClasses: {\r\n            type: Object,\r\n            default: () => {\r\n                return getValueByPath(getOptions(), 'autocomplete.inputClasses', {});\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            selected: null,\r\n            hovered: null,\r\n            headerHovered: null,\r\n            footerHovered: null,\r\n            isActive: false,\r\n            newValue: this.modelValue,\r\n            ariaAutocomplete: this.keepFirst ? 'both' : 'list',\r\n            newAutocomplete: this.autocomplete || 'off',\r\n            isListInViewportVertically: true,\r\n            hasFocus: false,\r\n            itemRefs: [],\r\n            width: undefined,\r\n            bodyEl: undefined,\r\n        };\r\n    },\r\n    computed: {\r\n        rootClasses() {\r\n            return [\r\n                this.computedClass('rootClass', 'o-acp'),\r\n                { [this.computedClass('expandedClass', 'o-acp--expanded')]: this.expanded }\r\n            ];\r\n        },\r\n        menuClasses() {\r\n            return [\r\n                this.computedClass('menuClass', 'o-acp__menu'),\r\n                { [this.computedClass('menuPositionClass', 'o-acp__menu--', this.newDropdownPosition)]: !this.appendToBody },\r\n            ];\r\n        },\r\n        itemClasses() {\r\n            return [\r\n                this.computedClass('itemClass', 'o-acp__item')\r\n            ];\r\n        },\r\n        itemEmptyClasses() {\r\n            return [\r\n                ...this.itemClasses,\r\n                this.computedClass('itemEmptyClass', 'o-acp__item--empty')\r\n            ];\r\n        },\r\n        itemGroupClasses() {\r\n            return [\r\n                ...this.itemClasses,\r\n                this.computedClass('itemGroupTitleClass', 'o-acp__item-group-title')\r\n            ];\r\n        },\r\n        itemHeaderClasses() {\r\n            return [\r\n                ...this.itemClasses,\r\n                this.computedClass('itemHeaderClass', 'o-acp__item-header'),\r\n                { [this.computedClass('itemHoverClass', 'o-acp__item--hover')]: this.headerHovered }\r\n            ];\r\n        },\r\n        itemFooterClasses() {\r\n            return [\r\n                ...this.itemClasses,\r\n                this.computedClass('itemFooterClass', 'o-acp__item-footer'),\r\n                { [this.computedClass('itemHoverClass', 'o-acp__item--hover')]: this.footerHovered }\r\n            ];\r\n        },\r\n        inputBind() {\r\n            return {\r\n                ...this.$attrs,\r\n                ...this.inputClasses\r\n            };\r\n        },\r\n        computedData() {\r\n            if (this.groupField) {\r\n                if (this.groupOptions) {\r\n                    const newData = [];\r\n                    this.data.forEach((option) => {\r\n                        const group = getValueByPath(option, this.groupField);\r\n                        const items = getValueByPath(option, this.groupOptions);\r\n                        newData.push({ group, items });\r\n                    });\r\n                    return newData;\r\n                }\r\n                else {\r\n                    const tmp = {};\r\n                    this.data.forEach((option) => {\r\n                        const group = getValueByPath(option, this.groupField);\r\n                        if (!tmp[group])\r\n                            tmp[group] = [];\r\n                        tmp[group].push(option);\r\n                    });\r\n                    const newData = [];\r\n                    Object.keys(this.data).forEach((group) => {\r\n                        newData.push({ group, items: this.data[group] });\r\n                    });\r\n                    return newData;\r\n                }\r\n            }\r\n            return [{ items: this.data }];\r\n        },\r\n        isEmpty() {\r\n            if (!this.computedData)\r\n                return true;\r\n            return !this.computedData.some((element) => element.items && element.items.length);\r\n        },\r\n        /**\r\n         * White-listed items to not close when clicked.\r\n         * Add input, dropdown and all children.\r\n         */\r\n        whiteList() {\r\n            const whiteList = [];\r\n            whiteList.push(this.$refs.input.$el.querySelector('input'));\r\n            whiteList.push(this.$refs.dropdown);\r\n            // Add all children from dropdown\r\n            if (this.$refs.dropdown !== undefined) {\r\n                const children = this.$refs.dropdown.querySelectorAll('*');\r\n                for (const child of children) {\r\n                    whiteList.push(child);\r\n                }\r\n            }\r\n            return whiteList;\r\n        },\r\n        newDropdownPosition() {\r\n            if (this.menuPosition === 'top' || (this.menuPosition === 'auto' && !this.isListInViewportVertically)) {\r\n                return 'top';\r\n            }\r\n            return 'bottom';\r\n        },\r\n        newIconRight() {\r\n            if (this.clearable && this.newValue) {\r\n                return 'close-circle';\r\n            }\r\n            return this.iconRight;\r\n        },\r\n        newIconRightClickable() {\r\n            if (this.clearable) {\r\n                return true;\r\n            }\r\n            return this.iconRightClickable;\r\n        },\r\n        menuStyle() {\r\n            return {\r\n                maxHeight: toCssDimension(this.maxHeight)\r\n            };\r\n        },\r\n        $elementRef() {\r\n            return 'input';\r\n        }\r\n    },\r\n    watch: {\r\n        /**\r\n         * When v-model is changed:\r\n         *   1. Update internal value.\r\n         *   2. If it's invalid, validate again.\r\n         */\r\n        modelValue(value) {\r\n            this.newValue = value;\r\n        },\r\n        /**\r\n         * When dropdown is toggled, check the visibility to know when\r\n         * to open upwards.\r\n         */\r\n        isActive(active) {\r\n            if (this.menuPosition === 'auto') {\r\n                if (active) {\r\n                    this.calcDropdownInViewportVertical();\r\n                }\r\n                else {\r\n                    // Timeout to wait for the animation to finish before recalculating\r\n                    setTimeout(() => {\r\n                        this.calcDropdownInViewportVertical();\r\n                    }, 100);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * When updating input's value\r\n         *   1. Emit changes\r\n         *   2. If value isn't the same as selected, set null\r\n         *   3. Close dropdown if value is clear or else open it\r\n         */\r\n        newValue(value) {\r\n            this.$emit('update:modelValue', value);\r\n            // Check if selected is invalid\r\n            const currentValue = this.getValue(this.selected);\r\n            if (currentValue && currentValue !== value) {\r\n                this.setSelected(null, false);\r\n            }\r\n            // Close dropdown if input is clear or else open it\r\n            if (this.hasFocus && (!this.openOnFocus || value)) {\r\n                this.isActive = !!value;\r\n            }\r\n        },\r\n        /**\r\n         * Select first option if \"keep-first\r\n         */\r\n        data() {\r\n            // Keep first option always pre-selected\r\n            if (this.keepFirst) {\r\n                this.$nextTick(() => {\r\n                    if (this.isActive) {\r\n                        this.selectFirstOption(this.computedData);\r\n                    }\r\n                    else {\r\n                        this.setHovered(null);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (this.hovered) {\r\n                    // reset hovered if list doesn't contain it\r\n                    const hoveredValue = this.getValue(this.hovered);\r\n                    const data = this.computedData.map((d) => d.items).reduce((a, b) => ([...a, ...b]), []);\r\n                    if (!data.some(d => this.getValue(d) === hoveredValue)) {\r\n                        this.setHovered(null);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        debounceTyping: {\r\n            handler(value) {\r\n                this.debouncedEmitTyping = debounce(this.emitTyping, value);\r\n            },\r\n            immediate: true\r\n        }\r\n    },\r\n    methods: {\r\n        itemOptionClasses(option) {\r\n            return [\r\n                ...this.itemClasses,\r\n                { [this.computedClass('itemHoverClass', 'o-acp__item--hover')]: option === this.hovered }\r\n            ];\r\n        },\r\n        /**\r\n         * Set which option is currently hovered.\r\n         */\r\n        setHovered(option) {\r\n            if (option === undefined)\r\n                return;\r\n            this.hovered = option;\r\n        },\r\n        /**\r\n         * Set which option is currently selected, update v-model,\r\n         * update input value and close dropdown.\r\n         */\r\n        setSelected(option, closeDropdown = true, event = undefined) {\r\n            if (option === undefined)\r\n                return;\r\n            this.selected = option;\r\n            /**\r\n             * @property {Object} selected selected option\r\n             * @property {Event} event native event\r\n             */\r\n            this.$emit('select', this.selected, event);\r\n            if (this.selected !== null) {\r\n                if (this.clearOnSelect) {\r\n                    const input = this.$refs.input;\r\n                    input.newValue = '';\r\n                    input.$refs.input.value = '';\r\n                }\r\n                else {\r\n                    this.newValue = this.getValue(this.selected);\r\n                }\r\n                this.setHovered(null);\r\n            }\r\n            closeDropdown && this.$nextTick(() => { this.isActive = false; });\r\n            this.checkValidity();\r\n        },\r\n        /**\r\n         * Select first option\r\n         */\r\n        selectFirstOption(computedData) {\r\n            this.$nextTick(() => {\r\n                const nonEmptyElements = computedData.filter((element) => element.items && element.items.length);\r\n                if (nonEmptyElements.length) {\r\n                    const option = nonEmptyElements[0].items[0];\r\n                    this.setHovered(option);\r\n                }\r\n                else {\r\n                    this.setHovered(null);\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * Key listener.\r\n         * Select the hovered option.\r\n         */\r\n        keydown(event) {\r\n            const { key } = event; // cannot destructure preventDefault (https://stackoverflow.com/a/49616808/2774496)\r\n            // prevent emit submit event\r\n            if (key === 'Enter')\r\n                event.preventDefault();\r\n            // Close dropdown on Tab & no hovered\r\n            if (key === 'Escape' || key === 'Tab') {\r\n                this.isActive = false;\r\n            }\r\n            if (this.confirmKeys.indexOf(key) >= 0) {\r\n                // If adding by comma, don't add the comma to the input\r\n                if (key === ',')\r\n                    event.preventDefault();\r\n                // Close dropdown on select by Tab\r\n                const closeDropdown = !this.keepOpen || key === 'Tab';\r\n                if (this.hovered === null) {\r\n                    // header and footer uses headerHovered && footerHovered. If header or footer\r\n                    // was selected then fire event otherwise just return so a value isn't selected\r\n                    this.checkIfHeaderOrFooterSelected(event, null, closeDropdown);\r\n                    return;\r\n                }\r\n                this.setSelected(this.hovered, closeDropdown, event);\r\n            }\r\n        },\r\n        selectHeaderOrFoterByClick(event, origin) {\r\n            this.checkIfHeaderOrFooterSelected(event, { origin: origin });\r\n        },\r\n        /**\r\n         * Check if header or footer was selected.\r\n         */\r\n        checkIfHeaderOrFooterSelected(event, triggerClick, closeDropdown = true) {\r\n            if (this.selectableHeader && (this.headerHovered || (triggerClick && triggerClick.origin === 'header'))) {\r\n                this.$emit('select-header', event);\r\n                this.headerHovered = false;\r\n                if (triggerClick)\r\n                    this.setHovered(null);\r\n                if (closeDropdown)\r\n                    this.isActive = false;\r\n            }\r\n            if (this.selectableFooter && (this.footerHovered || (triggerClick && triggerClick.origin === 'header'))) {\r\n                this.$emit('select-footer', event);\r\n                this.footerHovered = false;\r\n                if (triggerClick)\r\n                    this.setHovered(null);\r\n                if (closeDropdown)\r\n                    this.isActive = false;\r\n            }\r\n        },\r\n        /**\r\n         * Close dropdown if clicked outside.\r\n         */\r\n        clickedOutside(event) {\r\n            if (!this.hasFocus && this.whiteList.indexOf(event.target) < 0) {\r\n                if (this.keepFirst && this.hovered && this.selectOnClickOutside) {\r\n                    this.setSelected(this.hovered, true);\r\n                }\r\n                else {\r\n                    this.isActive = false;\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Return display text for the input.\r\n         * If object, get value from path, or else just the value.\r\n         */\r\n        getValue(option) {\r\n            if (option === null)\r\n                return;\r\n            if (typeof this.customFormatter !== 'undefined') {\r\n                return this.customFormatter(option);\r\n            }\r\n            return typeof option === 'object'\r\n                ? getValueByPath(option, this.field)\r\n                : option;\r\n        },\r\n        /**\r\n         * Check if the scroll list inside the dropdown\r\n         * reached it's end.\r\n         */\r\n        checkIfReachedTheEndOfScroll() {\r\n            const list = this.$refs.dropdown;\r\n            if (list.clientHeight !== list.scrollHeight &&\r\n                list.scrollTop + list.clientHeight >= list.scrollHeight) {\r\n                this.$emit('infinite-scroll');\r\n            }\r\n        },\r\n        /**\r\n         * Calculate if the dropdown is vertically visible when activated,\r\n         * otherwise it is openened upwards.\r\n         */\r\n        calcDropdownInViewportVertical() {\r\n            this.$nextTick(() => {\r\n                /**\r\n                * this.$refs.dropdown may be undefined\r\n                * when Autocomplete is conditional rendered\r\n                */\r\n                if (!this.$refs.dropdown)\r\n                    return;\r\n                const rect = this.$refs.dropdown.getBoundingClientRect();\r\n                this.isListInViewportVertically = (rect.top >= 0 &&\r\n                    rect.bottom <= (window.innerHeight ||\r\n                        document.documentElement.clientHeight));\r\n                if (this.appendToBody) {\r\n                    this.updateAppendToBody();\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * Arrows keys listener.\r\n         * If dropdown is active, set hovered option, or else just open.\r\n         */\r\n        keyArrows(direction) {\r\n            const sum = direction === 'down' ? 1 : -1;\r\n            if (this.isActive) {\r\n                const data = this.computedData.map((d) => d.items).reduce((a, b) => ([...a, ...b]), []);\r\n                if (this.$slots.header && this.selectableHeader) {\r\n                    data.unshift(undefined);\r\n                }\r\n                if (this.$slots.footer && this.selectableFooter) {\r\n                    data.push(undefined);\r\n                }\r\n                let index;\r\n                if (this.headerHovered) {\r\n                    index = 0 + sum;\r\n                }\r\n                else if (this.footerHovered) {\r\n                    index = (data.length - 1) + sum;\r\n                }\r\n                else {\r\n                    index = data.indexOf(this.hovered) + sum;\r\n                }\r\n                index = index > data.length - 1 ? data.length - 1 : index;\r\n                index = index < 0 ? 0 : index;\r\n                this.footerHovered = false;\r\n                this.headerHovered = false;\r\n                this.setHovered(data[index] !== undefined ? data[index] : null);\r\n                if (this.$slots.footer && this.selectableFooter && index === data.length - 1) {\r\n                    this.footerHovered = true;\r\n                }\r\n                if (this.$slots.header && this.selectableHeader && index === 0) {\r\n                    this.headerHovered = true;\r\n                }\r\n                const list = this.$refs.dropdown;\r\n                let items = this.itemRefs || [];\r\n                if (this.$slots.header && this.selectableHeader) {\r\n                    items = [this.$refs.header, ...items];\r\n                }\r\n                if (this.$slots.footer && this.selectableFooter) {\r\n                    items = [...items, this.$refs.footer];\r\n                }\r\n                const element = items[index];\r\n                if (!element)\r\n                    return;\r\n                const visMin = list.scrollTop;\r\n                const visMax = list.scrollTop + list.clientHeight - element.clientHeight;\r\n                if (element.offsetTop < visMin) {\r\n                    list.scrollTop = element.offsetTop;\r\n                }\r\n                else if (element.offsetTop >= visMax) {\r\n                    list.scrollTop = (element.offsetTop -\r\n                        list.clientHeight +\r\n                        element.clientHeight);\r\n                }\r\n            }\r\n            else {\r\n                this.isActive = true;\r\n            }\r\n        },\r\n        /**\r\n         * Focus listener.\r\n         * If value is the same as selected, select all text.\r\n         */\r\n        focused(event) {\r\n            if (this.getValue(this.selected) === this.newValue) {\r\n                this.$el.querySelector('input').select();\r\n            }\r\n            if (this.openOnFocus) {\r\n                this.isActive = true;\r\n                if (this.keepFirst) {\r\n                    // If open on focus, update the hovered\r\n                    this.selectFirstOption(this.computedData);\r\n                }\r\n            }\r\n            this.hasFocus = true;\r\n            this.$emit('focus', event);\r\n        },\r\n        /**\r\n        * Blur listener.\r\n        */\r\n        onBlur(event) {\r\n            this.hasFocus = false;\r\n            this.$emit('blur', event);\r\n        },\r\n        onInput() {\r\n            const currentValue = this.getValue(this.selected);\r\n            if (currentValue && currentValue === this.newValue)\r\n                return;\r\n            if (this.debounceTyping) {\r\n                this.debouncedEmitTyping();\r\n            }\r\n            else {\r\n                this.emitTyping();\r\n            }\r\n        },\r\n        emitTyping() {\r\n            this.$emit('typing', this.newValue);\r\n            this.checkValidity();\r\n        },\r\n        rightIconClick(event) {\r\n            if (this.clearable) {\r\n                this.newValue = '';\r\n                this.setSelected(null, false);\r\n                if (this.openOnFocus) {\r\n                    this.$refs.input.$el.focus();\r\n                }\r\n            }\r\n            else {\r\n                this.$emit('icon-right-click', event);\r\n            }\r\n        },\r\n        checkValidity() {\r\n            if (this.useHtml5Validation) {\r\n                this.$nextTick(() => {\r\n                    this.checkHtml5Validity();\r\n                });\r\n            }\r\n        },\r\n        setItemRef(el) {\r\n            if (el) {\r\n                this.itemRefs.push(el);\r\n            }\r\n        },\r\n        updateAppendToBody() {\r\n            const dropdownMenu = this.$refs.dropdown;\r\n            const trigger = this.$refs.input.$el;\r\n            if (dropdownMenu && trigger) {\r\n                // update wrapper dropdown\r\n                const root = this.$data.bodyEl;\r\n                root.classList.forEach((item) => root.classList.remove(...item.split(' ')));\r\n                this.rootClasses.forEach((item) => {\r\n                    if (item) {\r\n                        if (typeof item === 'object') {\r\n                            Object.keys(item).filter(key => key && item[key]).forEach(key => root.classList.add(key));\r\n                        }\r\n                        else {\r\n                            root.classList.add(...item.split(' '));\r\n                        }\r\n                    }\r\n                });\r\n                const rect = trigger.getBoundingClientRect();\r\n                let top = rect.top + window.scrollY;\r\n                const left = rect.left + window.scrollX;\r\n                if (this.newDropdownPosition !== 'top') {\r\n                    top += trigger.clientHeight;\r\n                }\r\n                else {\r\n                    top -= dropdownMenu.clientHeight;\r\n                }\r\n                dropdownMenu.style.position = 'absolute';\r\n                dropdownMenu.style.top = `${top}px`;\r\n                dropdownMenu.style.left = `${left}px`;\r\n                dropdownMenu.style.width = `${trigger.clientWidth}px`;\r\n                dropdownMenu.style.maxWidth = `${trigger.clientWidth}px`;\r\n                dropdownMenu.style.zIndex = '9999';\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        if (typeof window !== 'undefined') {\r\n            document.addEventListener('click', this.clickedOutside);\r\n            if (this.menuPosition === 'auto')\r\n                window.addEventListener('resize', this.calcDropdownInViewportVertical);\r\n        }\r\n    },\r\n    mounted() {\r\n        const list = this.$refs.dropdown;\r\n        if (this.checkInfiniteScroll && list) {\r\n            list.addEventListener('scroll', this.checkIfReachedTheEndOfScroll);\r\n        }\r\n        if (this.appendToBody) {\r\n            this.$data.bodyEl = createAbsoluteElement(list);\r\n            this.updateAppendToBody();\r\n        }\r\n    },\r\n    beforeUpdate() {\r\n        this.width = this.$refs.input ? this.$refs.input.$el.clientWidth : undefined;\r\n        this.itemRefs = [];\r\n    },\r\n    beforeUnmount() {\r\n        if (typeof window !== 'undefined') {\r\n            document.removeEventListener('click', this.clickedOutside);\r\n            if (this.menuPosition === 'auto')\r\n                window.removeEventListener('resize', this.calcDropdownInViewportVertical);\r\n        }\r\n        if (this.checkInfiniteScroll && this.$refs.dropdown) {\r\n            const list = this.$refs.dropdown;\r\n            list.removeEventListener('scroll', this.checkIfReachedTheEndOfScroll);\r\n        }\r\n        if (this.appendToBody) {\r\n            removeElement(this.$data.bodyEl);\r\n        }\r\n    }\r\n});\n\nconst _hoisted_1 = {\n  key: 1\n};\nconst _hoisted_2 = {\n  key: 1\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_o_input = resolveComponent(\"o-input\");\n\n  return openBlock(), createBlock(\"div\", {\n    class: _ctx.rootClasses\n  }, [createVNode(_component_o_input, mergeProps(_ctx.inputBind, {\n    modelValue: _ctx.newValue,\n    \"onUpdate:modelValue\": [_cache[1] || (_cache[1] = $event => _ctx.newValue = $event), _ctx.onInput],\n    ref: \"input\",\n    type: _ctx.type,\n    size: _ctx.size,\n    rounded: _ctx.rounded,\n    icon: _ctx.icon,\n    \"icon-right\": _ctx.newIconRight,\n    \"icon-right-clickable\": _ctx.newIconRightClickable,\n    \"icon-pack\": _ctx.iconPack,\n    maxlength: _ctx.maxlength,\n    autocomplete: _ctx.newAutocomplete,\n    \"use-html5-validation\": false,\n    \"aria-autocomplete\": _ctx.ariaAutocomplete,\n    expanded: _ctx.expanded,\n    onFocus: _ctx.focused,\n    onBlur: _ctx.onBlur,\n    onKeydown: [_ctx.keydown, _cache[2] || (_cache[2] = withKeys(withModifiers($event => _ctx.keyArrows('up'), [\"prevent\"]), [\"up\"])), _cache[3] || (_cache[3] = withKeys(withModifiers($event => _ctx.keyArrows('down'), [\"prevent\"]), [\"down\"]))],\n    \"onIcon-right-click\": _ctx.rightIconClick,\n    \"onIcon-click\": _cache[4] || (_cache[4] = event => _ctx.$emit('icon-click', event))\n  }), null, 16\n  /* FULL_PROPS */\n  , [\"modelValue\", \"type\", \"size\", \"rounded\", \"icon\", \"icon-right\", \"icon-right-clickable\", \"icon-pack\", \"maxlength\", \"autocomplete\", \"aria-autocomplete\", \"expanded\", \"onUpdate:modelValue\", \"onFocus\", \"onBlur\", \"onKeydown\", \"onIcon-right-click\"]), createVNode(Transition, {\n    name: _ctx.animation\n  }, {\n    default: withCtx(() => [withDirectives(createVNode(\"div\", {\n      class: _ctx.menuClasses,\n      is: _ctx.menuTag,\n      style: _ctx.menuStyle,\n      ref: \"dropdown\"\n    }, [_ctx.$slots.header ? (openBlock(), createBlock(\"div\", {\n      key: 0,\n      is: _ctx.itemTag,\n      ref: \"header\",\n      role: \"button\",\n      tabindex: 0,\n      onClick: _cache[5] || (_cache[5] = $event => _ctx.selectHeaderOrFoterByClick($event, 'header')),\n      class: _ctx.itemHeaderClasses\n    }, [renderSlot(_ctx.$slots, \"header\")], 10\n    /* CLASS, PROPS */\n    , [\"is\"])) : createCommentVNode(\"v-if\", true), (openBlock(true), createBlock(Fragment, null, renderList(_ctx.computedData, (element, groupindex) => {\n      return openBlock(), createBlock(Fragment, null, [element.group ? (openBlock(), createBlock(\"div\", {\n        is: _ctx.itemTag,\n        key: groupindex + 'group',\n        class: _ctx.itemGroupClasses\n      }, [_ctx.$slots.group ? renderSlot(_ctx.$slots, \"group\", {\n        key: 0,\n        group: element.group,\n        index: groupindex\n      }) : (openBlock(), createBlock(\"span\", _hoisted_1, toDisplayString(element.group), 1\n      /* TEXT */\n      ))], 10\n      /* CLASS, PROPS */\n      , [\"is\"])) : createCommentVNode(\"v-if\", true), (openBlock(true), createBlock(Fragment, null, renderList(element.items, (option, index) => {\n        return openBlock(), createBlock(\"div\", {\n          key: groupindex + ':' + index,\n          is: _ctx.itemTag,\n          class: _ctx.itemOptionClasses(option),\n          onClick: withModifiers($event => _ctx.setSelected(option, !_ctx.keepOpen, $event), [\"stop\"]),\n          ref: _ctx.setItemRef\n        }, [_ctx.$slots.default ? renderSlot(_ctx.$slots, \"default\", {\n          key: 0,\n          option: option,\n          index: index\n        }) : (openBlock(), createBlock(\"span\", _hoisted_2, toDisplayString(_ctx.getValue(option)), 1\n        /* TEXT */\n        ))], 10\n        /* CLASS, PROPS */\n        , [\"is\", \"onClick\"]);\n      }), 128\n      /* KEYED_FRAGMENT */\n      ))], 64\n      /* STABLE_FRAGMENT */\n      );\n    }), 256\n    /* UNKEYED_FRAGMENT */\n    )), _ctx.isEmpty && _ctx.$slots.empty ? (openBlock(), createBlock(\"div\", {\n      key: 1,\n      is: _ctx.itemTag,\n      class: _ctx.itemEmptyClasses\n    }, [renderSlot(_ctx.$slots, \"empty\")], 10\n    /* CLASS, PROPS */\n    , [\"is\"])) : createCommentVNode(\"v-if\", true), _ctx.$slots.footer ? (openBlock(), createBlock(\"div\", {\n      key: 2,\n      is: _ctx.itemTag,\n      ref: \"footer\",\n      role: \"button\",\n      tabindex: 0,\n      onClick: _cache[6] || (_cache[6] = $event => _ctx.selectHeaderOrFoterByClick($event, 'footer')),\n      class: _ctx.itemFooterClasses\n    }, [renderSlot(_ctx.$slots, \"footer\")], 10\n    /* CLASS, PROPS */\n    , [\"is\"])) : createCommentVNode(\"v-if\", true)], 14\n    /* CLASS, STYLE, PROPS */\n    , [\"is\"]), [[vShow, _ctx.isActive && (!_ctx.isEmpty || _ctx.$slots.empty || _ctx.$slots.header || _ctx.$slots.footer)]])]),\n    _: 1\n  }, 8\n  /* PROPS */\n  , [\"name\"])], 2\n  /* CLASS */\n  );\n}\n\nscript.render = render;\nscript.__file = \"src/components/autocomplete/Autocomplete.vue\";\n\nexport { script as s };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}